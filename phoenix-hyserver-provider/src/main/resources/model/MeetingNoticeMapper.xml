<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="MeetingNotice">

	<resultMap id="meetingNoticeMap" type="com.ginkgocap.ywxt.model.meeting.MeetingNotice">
        <result property="id" column="id"/>
        <result property="receiverType" column="receiver_type"/>
        <result property="receiver" column="receiver"/>
        <result property="receiverName" column="receiver_name"/>
        <result property="noticeType" column="notice_type"/>
        <result property="isShow" column="is_show"/>
        <result property="noticeContent" column="notice_content"/>
        <result property="meetingId" column="meeting_id"/>
        <result property="createId" column="create_id"/>
        <result property="createName" column="create_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isRead" column="is_read"/>
        <result property="readTime" column="read_time"/>
	</resultMap>
	
	<sql id="columns">
	    <![CDATA[
		id as Id,receiver_type as receiverType,receiver as receiver,receiver_name as receiverName,notice_type as noticeType,is_show as isShow, notice_content as noticeContent,
		meeting_id as meetingId,create_id as createId,create_name as create_name,create_time as createTime,update_time as updateTime, is_read as isRead, read_time as readTime
	    ]]>
	</sql>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO tb_meeting_notice (
        	id,
        	receiver_type,
        	receiver,
        	receiver_name,
        	notice_type,
        	is_show,
        	notice_content,
        	meeting_id,
        	create_id,
        	create_name,
        	create_time,
        	update_time,
        	is_read,
        	read_time
        ) VALUES (
        	#{id},
        	#{receiverType},
        	#{receiver},
        	#{receiverName},
        	#{noticeType},
        	#{isShow},
        	#{noticeContent},
        	#{meetingId},
        	#{createId},
        	#{createName},
        	NOW(),
        	NOW(),
        	#{isRead},
        	#{readTime}
        )
    ]]>
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE tb_meeting_notice 
        SET receiver_type = #{receiverType},
	        receiver = #{receiver},
	        receiver_name =#{receiverName},
	        notice_type = #{noticeType},
	        is_show = #{isShow },
	        notice_content = #{noticeContent},
	        meeting_id = #{meetingId},
	        create_id = #{createId},
	        create_name = #{createName},
	        update_time = NOW(),
	        is_read = #{isRead},
	        read_time = #{readTime}
        WHERE id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM tb_meeting_notice 
        WHERE id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="meetingNoticeMap">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM tb_meeting_notice 
	        WHERE id = #{id} 
	    ]]>
	</select>
	
	
	<select id="getSignUpNoticeByCreateId" resultMap="meetingNoticeMap" parameterType="Map">
	    SELECT n.id,
			n.receiver_type AS receiverType,
			n.receiver AS receiver,
			n.receiver_name AS receiverName,
			n.notice_type AS noticeType,
			n.is_show AS isShow,
			n.notice_content AS noticeContent,
			n.meeting_id AS meetingId,
			n.create_id AS createId,
			n.create_name AS create_name,
			n.create_time AS createTime,
			n.update_time AS updateTime,
			n.is_read AS isRead,
			n.read_time AS readTime
	    <![CDATA[
	    FROM tb_meeting_notice as n 
	    WHERE n.create_id = #{createId} 
	    	AND n.meeting_id = #{meetingId} 
	    	AND n.notice_type = 1 
	    	AND n.is_show = 1 
	    	AND n.receiver_type = 0
	    ]]>
    </select>

	<select id="getNoticeByProperty" resultMap="meetingNoticeMap" parameterType="Integer">
	    SELECT  <include refid="columns" />
	    <![CDATA[
	    FROM tb_meeting_notice 
	    WHERE receiver_type = #{receiverType}
	    	AND receiver = #{receiver} 
	    	AND notice_type = #{noticeType} 
	   		AND is_show= #{isShow } 
	    	AND meeting_id = #{meetingId} 
	    	AND create_id = #{createId} 
	    ]]>
    </select>
    
	<select id="getSignUpNotice" resultMap="meetingNoticeMap" parameterType="Integer">
	    SELECT n.id,
			n.receiver_type AS receiverType,
			n.receiver AS receiver,
			n.receiver_name AS receiverName,
			n.notice_type AS noticeType,
			n.is_show AS isShow,
			n.notice_content AS noticeContent,
			n.meeting_id AS meetingId,
			n.create_id AS createId,
			n.create_name AS create_name,
			n.create_time AS createTime,
			n.update_time AS updateTime,
			n.is_read AS isRead,
			n.read_time AS readTime
	    <![CDATA[
	    FROM tb_meeting_notice as n, 
	    	tb_notice_field as f 
	    WHERE n.id = f.notice_id 
	    	AND f.field = #{field} 
	    	AND n.is_show = 1 
	    	AND n.notice_type = 1
	    ]]>
    </select>
    <select id="getByReceiverType" resultMap="meetingNoticeMap" parameterType="Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM tb_meeting_notice 
	        WHERE receiver_type = #{receiverType}
	    ]]>
    </select>
    
    <select id="getByReceiver" resultMap="meetingNoticeMap" parameterType="java.lang.Long">
		SELECT <include refid="columns"/>
		<![CDATA[
	        FROM tb_meeting_notice 
	        WHERE receiver = #{receiver}
	        	AND is_show = 1
	    ]]>
    </select>
    
	<select id="getNewNotice" resultMap="meetingNoticeMap" parameterType="java.lang.Long">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM tb_meeting_notice 
	        WHERE receiver = #{receiver} 
	        	AND is_show = 1 
        	ORDER BY create_time DESC
        	LIMIT 1
	    ]]>
	</select>
	
	<select id="getUnReadNoticeCount" parameterType="java.lang.Long" resultType="Integer">
	    SELECT COUNT(*)
	    <![CDATA[
	        FROM tb_meeting_notice 
	        WHERE receiver = #{receiver} 
	        	AND is_show = 1 
	        	AND is_read = 0
	    ]]>
	</select>
    
	<select id="getByNoticeType" resultMap="meetingNoticeMap" parameterType="Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM tb_meeting_notice 
	        WHERE notice_type = #{noticeType}
	        	AND is_show = 1
	    ]]>
	    ORDER BY create_time DESC
	</select>
    
	<select id="getByNoticeContent" resultMap="meetingNoticeMap" parameterType="java.lang.String">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM tb_meeting_notice 
	        WHERE notice_content = #{noticeContent}
	        	AND is_show = 1
	    ]]>
	    ORDER BY create_time DESC
	</select>
    
	<select id="getByMeetingId" resultMap="meetingNoticeMap" parameterType="java.lang.Long">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM tb_meeting_notice 
	        WHERE meeting_id = #{meetingId}
	        	AND is_show = 1
	    ]]>
	    ORDER BY create_time DESC
	</select>
	
	<select id="getByParam" resultMap="meetingNoticeMap" parameterType="map">
		SELECT <include refid="columns"/>
		FROM tb_meeting_notice 
		WHERE receiver = #{userId}
		<if test="isShow != null">
			AND is_show = #{isShow}
		</if>
		<if test="meetingIdList != null">
			AND meeting_id IN
			<foreach collection="meetingIdList" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY create_time DESC
	</select>
	
	<select id="getByCreateId" resultMap="meetingNoticeMap" parameterType="java.lang.Long">
		SELECT <include refid="columns"/>
		<![CDATA[
			FROM tb_meeting_notice 
			WHERE create_id = #{createId}
	        	AND is_show = 1
		]]>
		ORDER BY create_time DESC
	</select>
    
	<select id="getByCreateName" resultMap="meetingNoticeMap" parameterType="java.lang.String">
		SELECT <include refid="columns"/>
		<![CDATA[
			FROM tb_meeting_notice 
			WHERE create_name = #{createName}
	        	AND is_show = 1
		]]>
	</select>
    
	<select id="getByCreateTime" resultMap="meetingNoticeMap" parameterType="java.util.Date">
		SELECT <include refid="columns"/>
		<![CDATA[
			FROM tb_meeting_notice 
			WHERE create_time = #{createTime}
	        	AND is_show = 1
		]]>
	</select>
    
	<select id="getMeetingNoticeRelation" resultType="meetingNoticeRelation" parameterType="java.util.Date">
		SELECT * FROM (
			SELECT
				n.notice_content AS noticeContent,
				n.meeting_id     AS meetingId,
				n.create_time    AS createTime,
				n.update_time    AS updateTime,
				m.meeting_name   AS meetingName,
				n.receiver       AS memberId,
				m.create_id      AS meetingCreateId,
				m.create_name    AS meetingCreateName,
				p.pic_path       AS meetingPic
			FROM tb_meeting_notice AS n,
				tb_meeting m
			LEFT JOIN tb_meeting_pic p
				ON p.module_id = m.id
				AND p.module_type = 1 
				AND p.ishome_page = 1
			WHERE m.id = n.meeting_id
				AND n.receiver = #{memberId}
				AND n.is_show = 1 
			ORDER BY n.update_time DESC
		) t 
		GROUP BY t.meetingId 
		ORDER BY t.createTime DESC
	</select>
	
	<select id="getMyNoticeByMeetingIdAndReceiverType" resultMap="meetingNoticeMap" parameterType="Map">
		SELECT <include refid="columns"/>
		FROM tb_meeting_notice 
		WHERE receiver = #{receiver} 
			AND meeting_id = #{meetingId} 
			AND is_show = 1 
		ORDER BY create_time DESC
	</select>
      
	<select id="getMyNoticeByMeetingIdAndNoticeType" resultMap="meetingNoticeMap" parameterType="Map">
		SELECT <include refid="columns"/>
		FROM tb_meeting_notice 
		WHERE receiver = #{receiver} 
			AND meeting_id = #{meetingId} 
			AND notice_type = #{notice_type}
			AND is_show = 1
		ORDER BY create_time DESC
	</select>
	
	<select id="selectnoticeindex"  parameterType="long"  resultType="hashmap">
		SELECT receiver,
			create_time,
			receiver_name,
			notice_content,
			meeting_id 
		FROM tb_meeting_notice 
		WHERE receiver = #{user_id} 
			AND is_show =1 
		ORDER BY create_time DESC 
		LIMIT 1
	</select>
</mapper>