<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ImMucmember">

	<resultMap id="imMucmemberMap" type="com.ginkgocap.ywxt.model.meeting.ImMucmember">
        <result property="id" column="Id"/>
        <result property="mucid" column="MUC_Id"/>
        <result property="userId" column="user_Id"/>
        <result property="compereType" column="compere_Type"/>
        <result property="joinTime" column="join_Time"/>
        <result property="exitTime" column="exit_Time"/>
        <result property="notifyType" column="notify_Type"/>
        <result property="newMessageCount" column="new_Message_Count"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		Id as id,MUC_Id as mucid,user_Id as userId,compere_Type as compereType,join_Time as joinTime,exit_Time as exitTime,notify_Type as notifyType,new_Message_Count as newMessageCount
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO t_im_MUCMember (
        	Id ,
        	MUC_Id ,
        	user_Id ,
        	compere_Type ,
        	join_Time ,
        	exit_Time ,
        	notify_Type ,
        	new_Message_Count 
        ) VALUES (
        	#{id} ,
        	#{mucid} ,
        	#{userId} ,
        	#{compereType} ,
        	#{joinTime} ,
        	#{exitTime} ,
        	#{notifyType} ,
        	#{newMessageCount} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE t_im_MUCMember SET
	        MUC_Id = #{mucid} ,
	        user_Id = #{userId} ,
	        compere_Type = #{compereType} ,
	        join_Time = #{joinTime} ,
	        exit_Time = #{exitTime} ,
	        notify_Type = #{notifyType} ,
	        new_Message_Count = #{newMessageCount} 
        WHERE 
	        Id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM t_im_MUCMember WHERE
        Id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="imMucmemberMap">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM t_im_MUCMember 
	        WHERE 
		        Id = #{id} 
	    ]]>
	</select>
	


    <select id="getByMucid" resultMap="imMucmemberMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where MUC_Id = #{mucid}
	    ]]>
    </select>
    
    <!-- 该代码块已过期,被getMembersByMucids替代 -->
    <select id="getByMucids" parameterType="map" resultType="map">
	    select muc_Id as mucId,
			       GROUP_CONCAT(DISTINCT user_Id ORDER BY last_Message_Date DESC) AS userIds
			  from t_im_RecordMessage
			 where muc_Id is not null
                   <if test="mucId != null and mucId !=''">
                       <![CDATA[ and muc_Id = #{mucId} ]]>
                   </if>
                   <if test="ids != null">
                   		and muc_Id in 
		         		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">  
				            #{item}  
				        </foreach>
				   </if>
			group by muc_Id
    </select>
    
    <!-- 社交列表获取成员头像 -->
    <select id="getMembersByMucids" parameterType="map" resultType="map">
	    select muc_Id as mucId,
			      GROUP_CONCAT(distinct user_id) as userIds from t_im_MUCMember
			 where muc_Id is not null
                   <if test="mucId != null and mucId !=''">
                       <![CDATA[ and muc_Id = #{mucId} ]]>
                   </if>
                   <if test="ids != null">
                   		and muc_Id in 
		         		<foreach collection="ids" index="index" item="item" open="(" separator="," close=")">  
				            #{item}  
				        </foreach>
				   </if>
			group by muc_Id
    </select>
    
    <select id="getByUserId" resultMap="imMucmemberMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where user_Id = #{userId}
	    ]]>
    </select>
    
    <select id="getByCompereType" resultMap="imMucmemberMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where compere_Type = #{compereType}
	    ]]>
    </select>
    
    <select id="getByJoinTime" resultMap="imMucmemberMap" parameterType="java.util.Date">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where join_Time = #{joinTime}
	    ]]>
    </select>
    
    <select id="getByExitTime" resultMap="imMucmemberMap" parameterType="java.util.Date">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where exit_Time = #{exitTime}
	    ]]>
    </select>
    
    <select id="getByNotifyType" resultMap="imMucmemberMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where notify_Type = #{notifyType}
	    ]]>
    </select>
    
    <select id="getByNewMessageCount" resultMap="imMucmemberMap" parameterType="java.lang.Integer">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM t_im_MUCMember where new_Message_Count = #{newMessageCount}
	    ]]>
    </select>
    
	
</mapper>

