<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.ginkgocap.ywxt</groupId>
		<artifactId>phoenix-hyserver</artifactId>
		<version>1.0.0</version>
	</parent>

	<artifactId>phoenix-hyserver-provider</artifactId>
	<packaging>war</packaging>
	<name>phoenix-hyserver Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- 主要依赖库的版本定义 -->
		<spring.version>3.1.2.RELEASE</spring.version>
		<spring-integration-version>2.1.3.RELEASE</spring-integration-version>
		<shiro.version>1.2.0</shiro.version>
		<jersey.version>1.10</jersey.version>
		<jetty.version>7.5.4.v20111024</jetty.version>
		<h2.version>1.3.161</h2.version>
		<jackson.version>1.9.2</jackson.version>
		<slf4j.version>1.6.4</slf4j.version>
		<selenium.version>2.12.0</selenium.version>
		<eclipse.useProjectReferences>false</eclipse.useProjectReferences>
		<skip_maven_deploy>true</skip_maven_deploy>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<eclipse.useProjectReferences>false</eclipse.useProjectReferences>
		<skip_maven_deploy>false</skip_maven_deploy>
		
		<person.version>1.0.0</person.version>
		<entire.dependencied>5.6.3</entire.dependencied>
		<!-- 测试版本 -->
		<huanxin.version>1.1.1-SNAPSHOT</huanxin.version>
		<!-- 线上版本 -->
		<!-- <huanxin.version>1.1.1</huanxin.version> -->
	</properties>
	<repositories>
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.101.89:8081/nexus/content/groups/public</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.gintong</groupId>
			<artifactId>phoenix-rocketmq-api</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.ginkgocap.ywxt</groupId>
			<artifactId>phoenix-person-api</artifactId>
			<version>${person.version}</version>
		</dependency>
		<dependency>
			<groupId>com.ginkgocap.ywxt</groupId>
			<artifactId>phoenix-entire-api</artifactId>
			<version>${entire.dependencied}</version>
		</dependency>
		<!-- security begin -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<!-- security end -->

		<!-- freemaker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<!-- Latest 2.3.x (not 2.4.x), at least 2.3.18 -->
			<version>[2.3.18,2.4)</version>
		</dependency>

		<!-- spring start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.7.0</version>
		</dependency>
		<!-- spring end -->
		<!-- spring integration start -->
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-core</artifactId>
			<version>${spring-integration-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-redis</artifactId>
			<version>${spring-integration-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-stream</artifactId>
			<version>${spring-integration-version}</version>
		</dependency>
		<!-- spring integration end -->
		<!-- redis start -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.1.0</version>
		</dependency>
		<!-- redis end -->
		<!-- mybatis start -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.30</version>
		</dependency>
		<!-- mybatis end -->


		<!-- jdbc start -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.5.6</version>
		</dependency>
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.12</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- jdbc end -->
		<!-- log start -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- log end -->
		<!-- common start -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.7</version>
		</dependency>
		<!-- common end -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<!-- file upload start -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- file upload end -->
		<!-- dubbo 服务注册方式 start -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>2.5.3</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.2.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.19.0-GA</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.3.3</version>
		</dependency>
		<dependency>
			<groupId>com.github.sgroschupf</groupId>
			<artifactId>zkclient</artifactId>
			<version>0.1</version>
		</dependency>
		<!-- dubbo 服务注册方式 end -->

		<!-- openoffice start -->
		<dependency>
			<groupId>com.artofsolving</groupId>
			<artifactId>jodconverter</artifactId>
			<version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>juh</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>jurt</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>ridl</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>unoil</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.4</version>
		</dependency>
		<dependency>
			<groupId>pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>0.7.3</version>
		</dependency>
		<dependency>
			<groupId>org.artofsolving.jodconverter</groupId>
			<artifactId>jodconverter-core</artifactId>
			<version>3.0-beta-4-jahia4</version>
			<classifier>jahia4</classifier>
		</dependency>
		<!-- openoffice end -->
		<!-- spring mongodb mapper -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>1.1.0.M1</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-expression</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- spring mongodb mapper end -->
		<!-- mongodb- -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.7.3</version>
		</dependency>
		<!-- mongodb end -->
		<!-- quartz start -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.5</version>
		</dependency>
		<!-- quartz end -->
		<!-- icepdf start -->
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-awt-util</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-dom</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-svg-dom</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-svggen</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-util</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>batik</groupId>
			<artifactId>batik-xml</artifactId>
			<version>1.6</version>
		</dependency>
		<dependency>
			<groupId>org.icepdf</groupId>
			<artifactId>icepdf-core</artifactId>
			<version>4.3.4</version>
		</dependency>
		<dependency>
			<groupId>org.icepdf</groupId>
			<artifactId>icepdf-viewer</artifactId>
			<version>4.3.4</version>
		</dependency>
		<!-- icepdf end 已传到私服 -->

		<!-- jetty start -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jsp-2.1</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1-glassfish</artifactId>
			<version>2.1.v20100127</version>
			<exclusions>
				<exclusion>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- 引入junit单元测试新断言 -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.1</version>
			<scope>test</scope>
		</dependency>

		<!-- jetty end -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.2</version>
		</dependency>
		<!-- thumbnailator -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>[0.4, 0.5)</version>
		</dependency>
		<!-- <dependency> <groupId>com.ginkgocap.ywxt</groupId> <artifactId>phoenix-business-search</artifactId> 
			<version>1.1.0</version> </dependency> -->
		<dependency>
			<groupId>com.ginkgocap.ywxt</groupId>
			<artifactId>phoenix-business-web</artifactId>
			<version>2.13.0-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>com.ginkgocap.ywxt</groupId>
					<artifactId>phoenix-business-search</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.ginkgocap.ywxt</groupId>
					<artifactId>phoenix-platform-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.ginkgocap.ywxt</groupId>
			<artifactId>phoenix-huanxin</artifactId>
			<version>${huanxin.version}</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>phoenix-meeting</finalName>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<filtering>true</filtering>
				<directory>src/main/webapp</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- sonar插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- test插件, 增大内存且仅测试名称为*Test的类 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.11</version>
					</dependency>
				</dependencies>
				<configuration>
					<argLine>-Xmx1024m -XX:PermSize=256m -XX:MaxPermSize=256m</argLine>
					<useSystemClassLoader>true</useSystemClassLoader>
				</configuration>
			</plugin>

			<!-- cobertura插件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>**/model/**/*.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>

			<!-- war插件, 设定war名称不带版本号 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warName>${project.artifactId}</warName>
				</configuration>
			</plugin>

			<!-- resource插件, 设定编码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>vcf</nonFilteredFileExtension>
						<nonFilteredFileExtension>csv</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>

			<!-- jar相关插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
			</plugin>

			<!-- clean插件 -->
			<!-- 2016-03-03升级插件版本有2.4.1至2.5以匹配eclipse自带maven版本3.2.1引发的编译不兼容 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
			</plugin>

			<!-- install插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.3.1</version>
			</plugin>

			<!-- deploy插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<!-- eclipse插件,设定下载Source并屏蔽.svn文件 -->
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>

			<!-- jetty插件,设定重载模式 <plugin> <groupId>org.mortbay.jetty</groupId> <artifactId>jetty-maven-plugin</artifactId> 
				<version>${jetty.version}</version> <configuration> <reload>manual</reload> 
				</configuration> </plugin> -->

			<!-- dependency插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- assembly插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>


			<!-- release相关插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.5</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>1.2</version>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.25</version>
				<configuration>
					<stopPort>9968</stopPort>
					<stopKey>foo</stopKey>
					<contextPath>/</contextPath>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<connectors>
						<connector implementation="org.mortbay.jetty.bio.SocketConnector">
							<port>8081</port>
							<maxIdleTime>60000</maxIdleTime>
						</connector>
					</connectors>
					<scanTargetPatterns>
						<scanTargetPattern>
							<directory>
								src/main/webapp/WEB-INF
							</directory>
							<excludes>
								<exclude>**/*.jsp</exclude>
							</excludes>
							<includes>
								<include>**/*.properties</include>
								<include>*.xml</include>
								<include>**/*.xml</include>
							</includes>
						</scanTargetPattern>
						<scanTargetPattern>
							<directory>src/main/resources</directory>
							<includes>
								<include>*.properties</include>
								<include>*.xml</include>
							</includes>
						</scanTargetPattern>
					</scanTargetPatterns>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat6-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<webAppConfig>
						<url>http://www.gt.com.cn:8090/</url>
						<contextPath>/</contextPath>
					</webAppConfig>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- 数据库连接地址和数据库名 -->
				<jdbc.url>
					jdbc:mysql://192.168.101.42:3306/im?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8
				</jdbc.url>
				<!-- 数据库访问帐号 -->
				<jdbc.username>dev_im</jdbc.username>
				<jdbc.password>unwo3bLI</jdbc.password>
				<!-- 用户数据库连接地址和数据库名 -->
				<user.jdbc.url>
					jdbc:mysql://192.168.101.42:3306/phoenix_user?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8
				</user.jdbc.url>
				<!-- 用户数据库访问帐号 -->
				<user.jdbc.username>dev</user.jdbc.username>
				<user.jdbc.password>dev</user.jdbc.password>
				<!-- phoenix-ui项目的发布地址，只要替换ip和端口即可 -->
				<!-- nfs地址 -->
				<user.cache.expiredTime>86400</user.cache.expiredTime>
				<user.cache.validationInterval>1800000</user.cache.validationInterval>
				<user.session.timeout>28800000</user.session.timeout>
				<!-- 网站发送邮件用的smtp以及帐号密码，一般不用修改 -->
				<email.SMTP>smtp.263xmail.com</email.SMTP>
				<!-- 帐号 -->
				<email.userName>yinxing5@ginkgocap.cn</email.userName>
				<!-- 密码 -->
				<email.pwd>sun1307737</email.pwd>
				<email.port>25</email.port>
				<!-- 是否使用ssl连接 -->
				<email.SSL>0</email.SSL>
				<!-- smtp是否需要登录 -->
				<email.auth>1</email.auth>
				<!-- memcache地址 -->
				<user.cache.address>192.168.101.131:11211</user.cache.address>
				<!-- redis地址 -->
				<redis.host>192.168.101.131</redis.host>
				<!-- redis端口 -->
				<redis.port>6379</redis.port>
				<!-- mongo地址 -->
				<mongodb.address>192.168.101.131:27017</mongodb.address>
				<!-- mongo中数据库 -->
				<mongodb.database>ywxt</mongodb.database>
				<!-- 数据库连接地址和数据库名 -->
				<!-- 数据库访问帐号 -->
				<!-- 文件上传存储路径，与phoenix-web项目中配置的upload.path应该相同 -->
				<upload.path>e:/tmp/upload</upload.path>
				<!-- phoenix-ui项目的发布地址，只要替换ip和端口即可 -->
				<log4j.level>debug</log4j.level>
				<!-- 日志存储路径，多个项目可以用同一个路径，在该路径下每个项目会自动创建以项目名称命名的子文件夹 -->
				<log4j.path>d:/log</log4j.path>
				<qatest.schema.skip>false</qatest.schema.skip>
				<dubbo.application.name>phoenix-web</dubbo.application.name>
				<dubbo.protocol.name>dubbo</dubbo.protocol.name>
				<!-- <dubbo.registry.address>zookeeper://192.168.101.131:2181?client=zkclient</dubbo.registry.address> 
					<dubbo.protocol.port>7011</dubbo.protocol.port> -->
				<dubbo.registry.address>zookeeper://192.168.101.15:2181?client=zkclient</dubbo.registry.address>
				<dubbo.protocol.port>7011</dubbo.protocol.port>
				<nfs.home>/webserver/upload/</nfs.home>
				<!-- nginx上传的地址 -->
				<nginx.root>http://192.168.101.22/</nginx.root>
				<!-- nfs的mount目录 -->
				<upload.path>/webserver/upload/meeting/</upload.path>

				<!-- 知识系统的地址 -->
				<knowledge.host>http://knowledge.dev.gintong.com:8890</knowledge.host>
				<!-- web项目地址 -->
				<gintongweb.host>http://dev.gintong.com:2222</gintongweb.host>
				<!-- 云项目地址 -->
				<cloud.host>http://cloud.server.gintong.com:2222/</cloud.host>
				<!-- jtMobileApp项目地址 -->
				<gintongservice.url>http://192.168.101.41:4445/</gintongservice.url>
				<!-- 本地项目地址 -->
				<!-- <gintongIm.url>http://192.168.150.79:3333/ImServer/</gintongIm.url> -->
				<!-- <gintongIm.url>http://192.168.101.41:4446/</gintongIm.url> -->
				<gintongIm.url>http://192.168.170.148:8080</gintongIm.url>
				<bigData.url>http://192.168.130.221:8090/</bigData.url>
			</properties>
		</profile>
		<profile>
			<id>person</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- 数据库连接地址和数据库名 -->
				<jdbc.url>
					jdbc:mysql://192.168.120.234:3306/im?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8
				</jdbc.url>
				<!-- 数据库访问帐号 -->
				<jdbc.username>root</jdbc.username>
				<jdbc.password>111111</jdbc.password>
				<!-- phoenix-ui项目的发布地址，只要替换ip和端口即可 -->
				<!-- nfs地址 -->
				<user.cache.expiredTime>86400</user.cache.expiredTime>
				<user.cache.validationInterval>1800000</user.cache.validationInterval>
				<user.session.timeout>28800000</user.session.timeout>
				<!-- 网站发送邮件用的smtp以及帐号密码，一般不用修改 -->
				<email.SMTP>smtp.263xmail.com</email.SMTP>
				<!-- 帐号 -->
				<email.userName>yinxing5@ginkgocap.cn</email.userName>
				<!-- 密码 -->
				<email.pwd>sun1307737</email.pwd>
				<email.port>25</email.port>
				<!-- 是否使用ssl连接 -->
				<email.SSL>0</email.SSL>
				<!-- smtp是否需要登录 -->
				<email.auth>1</email.auth>
				<!-- memcache地址 -->
				<user.cache.address>192.168.101.131:11211</user.cache.address>
				<!-- redis地址 -->
				<redis.host>192.168.120.234</redis.host>
				<!-- redis端口 -->
				<redis.port>6379</redis.port>
				<!-- mongo地址 -->
				<mongodb.address>192.168.120.234:27017</mongodb.address>
				<!-- mongo中数据库 -->
				<mongodb.database>ywxt</mongodb.database>
				<!-- 数据库连接地址和数据库名 -->
				<!-- 数据库访问帐号 -->
				<!-- 文件上传存储路径，与phoenix-web项目中配置的upload.path应该相同 -->
				<upload.path>e:/tmp/upload</upload.path>
				<!-- phoenix-ui项目的发布地址，只要替换ip和端口即可 -->
				<log4j.level>debug</log4j.level>
				<!-- 日志存储路径，多个项目可以用同一个路径，在该路径下每个项目会自动创建以项目名称命名的子文件夹 -->
				<log4j.path>d:/log</log4j.path>
				<qatest.schema.skip>false</qatest.schema.skip>
				<dubbo.application.name>phoenix-web</dubbo.application.name>
				<dubbo.protocol.name>dubbo</dubbo.protocol.name>
				<dubbo.registry.address>zookeeper://192.168.120.234:2181?client=zkclient</dubbo.registry.address>

				<nfs.home>/webserver/upload/</nfs.home>
				<!-- nginx上传的地址 -->
				<nginx.root>http://192.168.101.22/</nginx.root>
				<!-- nfs的mount目录 -->
				<upload.path>/webserver/upload/meeting/</upload.path>

				<!-- 知识系统的地址 -->
				<knowledge.host>http://knowledge.dev.gintong.com:8890</knowledge.host>
				<!-- web项目地址 -->
				<gintongweb.host>http://dev.gintong.com:2222</gintongweb.host>
				<!-- 云项目地址 -->
				<cloud.host>http://cloud.server.gintong.com:2222/</cloud.host>
				<!-- jtMobileApp项目地址 -->
				<gintongservice.url>http://192.168.101.41:4445/</gintongservice.url>
				<!-- 本地项目地址 -->
				<!-- <gintongIm.url>http://192.168.150.79:3333/ImServer/</gintongIm.url> -->
				<gintongIm.url>http://192.168.120.99:5555/</gintongIm.url>
				<bigData.url>http://192.168.130.221:8090/</bigData.url>
			</properties>
		</profile>
		<profile>
			<id>qa</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- 数据库连接地址和数据库名 -->
				<jdbc.url>
					jdbc:mysql://192.168.101.131:3306/im?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8
				</jdbc.url>
				<!-- 数据库访问帐号 -->
				<jdbc.username>zhangwei</jdbc.username>
				<jdbc.password>zhangwei</jdbc.password>
				<!-- phoenix-ui项目的发布地址，只要替换ip和端口即可 -->
				<!-- nfs地址 -->
				<user.cache.expiredTime>86400</user.cache.expiredTime>
				<user.cache.validationInterval>1800000</user.cache.validationInterval>
				<user.session.timeout>28800000</user.session.timeout>
				<!-- 网站发送邮件用的smtp以及帐号密码，一般不用修改 -->
				<email.SMTP>smtp.263xmail.com</email.SMTP>
				<!-- 帐号 -->
				<email.userName>yinxing5@ginkgocap.cn</email.userName>
				<!-- 密码 -->
				<email.pwd>sun1307737</email.pwd>
				<email.port>25</email.port>
				<!-- 是否使用ssl连接 -->
				<email.SSL>0</email.SSL>
				<!-- smtp是否需要登录 -->
				<email.auth>1</email.auth>
				<!-- memcache地址 -->
				<user.cache.address>192.168.101.90:11211</user.cache.address>
				<!-- redis地址 -->
				<redis.host>192.168.101..90</redis.host>
				<!-- redis端口 -->
				<redis.port>6379</redis.port>
				<!-- mongo地址 -->
				<mongodb.address>192.168.101..90:27017</mongodb.address>
				<!-- mongo中数据库 -->
				<mongodb.database>ywxt</mongodb.database>
				<!-- 数据库连接地址和数据库名 -->
				<!-- 数据库访问帐号 -->
				<!-- 文件上传存储路径，与phoenix-web项目中配置的upload.path应该相同 -->
				<upload.path>e:/tmp/upload</upload.path>
				<!-- phoenix-ui项目的发布地址，只要替换ip和端口即可 -->
				<log4j.level>debug</log4j.level>
				<!-- 日志存储路径，多个项目可以用同一个路径，在该路径下每个项目会自动创建以项目名称命名的子文件夹 -->
				<log4j.path>E:/Workspace/log</log4j.path>
				<qatest.schema.skip>false</qatest.schema.skip>
				<dubbo.application.name>phoenix-web</dubbo.application.name>
				<dubbo.protocol.name>dubbo</dubbo.protocol.name>
				<dubbo.registry.address>zookeeper://192.168.101.90:2181?client=zkclient</dubbo.registry.address>

				<nfs.home>/webserver/upload/</nfs.home>
				<!-- nginx上传的地址 -->
				<nginx.root>http://192.168.101.22/</nginx.root>
				<!-- nfs的mount目录 -->
				<upload.path>/webserver/upload/meeting/</upload.path>

				<!-- 知识系统的地址 -->
				<knowledge.host>http://knowledge.dev.gintong.com:8890</knowledge.host>
				<!-- web项目地址 -->
				<gintongweb.host>http://dev.gintong.com:2222</gintongweb.host>
				<!-- 云项目地址 -->
				<cloud.host>http://cloud.server.gintong.com:2222/</cloud.host>
				<!-- jtMobileApp项目地址 -->
				<gintongservice.url>http://192.168.101.90:5555/</gintongservice.url>
				<!-- 本地项目地址 -->
				<!-- <gintongIm.url>http://192.168.150.79:3333/ImServer/</gintongIm.url> -->
				<gintongIm.url>http://localhost:3333/</gintongIm.url>
				<bigData.url>http://192.168.101.9:8090/</bigData.url>
			</properties>
		</profile>
		<profile>
			<id>qatest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<filters>
					<filter>${sa.config.file}</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>delivery</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<filters>
					<filter>${sa.config.file}</filter>
				</filters>
			</build>
		</profile>
	</profiles>

</project>
